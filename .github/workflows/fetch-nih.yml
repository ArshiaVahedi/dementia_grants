name: Fetch NIH dementia grants

on:
  schedule:
    - cron: "0 6 * * *"   # run daily at 06:00 UTC
  workflow_dispatch:

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Fetch NIH data
        run: |
          mkdir -p data
          API='https://api.reporter.nih.gov/v2/projects/search'
          OFFSET=0
          LIMIT=500

          # Start with empty JSON
          echo '{"results":[],"meta":{}}' > data/latest.json

          while true; do
            # Build query from payload.json with updated offset/limit
            jq ".offset=$OFFSET | .limit=$LIMIT" payload.json > query.json

            # Fetch one page into a temporary file
            curl -s -X POST "$API" \
              -H "Content-Type: application/json" \
              --data @query.json > page.json

            COUNT=$(jq '.results | length' page.json)
            TOTAL=$(jq '.meta.total // 0' page.json)

            # Merge page.json into data/latest.json
            jq -s '
              {
                results: (.[0].results + .[1].results),
                meta: .[1].meta
              }
            ' data/latest.json page.json > data/latest.tmp && mv data/latest.tmp data/latest.json

            echo "Fetched $COUNT records (offset $OFFSET / total $TOTAL)"

            if [ "$COUNT" -eq 0 ]; then
              break
            fi

            OFFSET=$((OFFSET + LIMIT))
            if [ "$OFFSET" -ge "$TOTAL" ]; then
              break
            fi

            # Pause briefly to avoid hammering the API
            sleep 2
          done

      - name: Commit JSON
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/latest.json
          git commit -m "Update NIH dementia grants data" || echo "No changes to commit"
          git push
